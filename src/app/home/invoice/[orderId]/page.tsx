'use client';
import { use } from 'react';
import { useEffect, useState } from 'react';

// ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏® type ‡∏Ç‡∏≠‡∏á order ‡∏Ñ‡∏£‡πà‡∏≤‡∏ß ‡πÜ
interface CartItem {
  name: string;
  quantity: number;
  unitPrice: number;
  totalPrice: number;
}

interface Order {
  orderId: string;
  customerName: string;
  phoneNumber: string;
  cart: CartItem[];
  finalTotal: number;
  vatAmount: number;
  grandTotal: number;
}

export default function InvoicePage({ params }: { params: Promise<{ orderId: string }> }) {
  // ‚úÖ ‡πÉ‡∏ä‡πâ React.use() unwrap params (‡πÄ‡∏û‡∏£‡∏≤‡∏∞ Next.js 15 ‡πÉ‡∏´‡πâ params ‡πÄ‡∏õ‡πá‡∏ô Promise)
  const { orderId } = use(params);

  console.log(`${process.env.NEXT_PUBLIC_API_URL}/orders/${orderId}`);

  const [order, setOrder] = useState<Order | null>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchOrder = async () => {
      try {
        const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/orders/${orderId}`);
        if (!res.ok) throw new Error('‡πÇ‡∏´‡∏•‡∏î‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
        const data = await res.json();
        setOrder(data);
      } catch (err) {
        console.error('‚ùå Error:', err);
      } finally {
        setLoading(false);
      }
    };
    fetchOrder();
  }, [orderId]);

  if (loading) return <p>‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>;
  if (!order) return <p>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå</p>;

  return (
    <div>
      {/* ‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° (‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏û‡∏¥‡∏°‡∏û‡πå‡∏≠‡∏≠‡∏Å‡∏°‡∏≤) */}
      <div className="no-print" style={{ margin: '10px 0' }}>
        <button onClick={() => window.print()}>üñ®Ô∏è Print / Save PDF</button>
      </div>

      {/* ‡πÉ‡∏ö‡∏Å‡∏≥‡∏Å‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏µ A4 ‡πÅ‡∏ö‡∏ö‡∏ã‡πâ‡∏≤‡∏¢‚Äì‡∏Ç‡∏ß‡∏≤ */}
      <div id="invoice" className="invoice-page">
        {/* ‡∏ã‡πâ‡∏≤‡∏¢: ‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö */}
        <div className="invoice-column">
          <h2>‡πÉ‡∏ö‡∏Å‡∏≥‡∏Å‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏µ (‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö)</h2>
          <p>
            <b>‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà:</b> {order.orderId}
          </p>
          <p>
            <b>‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤:</b> {order.customerName}
          </p>
          <p>
            <b>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£:</b> {order.phoneNumber}
          </p>

          <table>
            <thead>
              <tr>
                <th>‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</th>
                <th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th>
                <th>‡∏£‡∏≤‡∏Ñ‡∏≤/‡∏´‡∏ô‡πà‡∏ß‡∏¢</th>
                <th>‡∏£‡∏ß‡∏°</th>
              </tr>
            </thead>
            <tbody>
              {order.cart.map((item, i) => (
                <tr key={i}>
                  <td>{item.name}</td>
                  <td>{item.quantity}</td>
                  <td>{item.unitPrice.toFixed(2)}</td>
                  <td>{item.totalPrice.toFixed(2)}</td>
                </tr>
              ))}
            </tbody>
          </table>

          <p>‡∏¢‡∏≠‡∏î‡∏Å‡πà‡∏≠‡∏ô VAT: {order.finalTotal.toFixed(2)} ‡∏ö‡∏≤‡∏ó</p>
          <p>VAT 7%: {order.vatAmount.toFixed(2)} ‡∏ö‡∏≤‡∏ó</p>
          <h3>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏™‡∏∏‡∏ó‡∏ò‡∏¥: {order.grandTotal.toFixed(2)} ‡∏ö‡∏≤‡∏ó</h3>
        </div>

        {/* ‡∏Ç‡∏ß‡∏≤: ‡∏™‡∏≥‡πÄ‡∏ô‡∏≤ */}
        <div className="invoice-column">
          <h2>‡πÉ‡∏ö‡∏Å‡∏≥‡∏Å‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏µ (‡∏™‡∏≥‡πÄ‡∏ô‡∏≤)</h2>
          <p>
            <b>‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà:</b> {order.orderId}
          </p>
          <p>
            <b>‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤:</b> {order.customerName}
          </p>
          <p>
            <b>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£:</b> {order.phoneNumber}
          </p>
          {/* üëâ ‡∏à‡∏∞ render cart ‡∏ã‡πâ‡∏≥‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö‡∏Å‡πá‡πÑ‡∏î‡πâ */}
          <table>
            <thead>
              <tr>
                <th>‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</th>
                <th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th>
                <th>‡∏£‡∏≤‡∏Ñ‡∏≤/‡∏´‡∏ô‡πà‡∏ß‡∏¢</th>
                <th>‡∏£‡∏ß‡∏°</th>
              </tr>
            </thead>
            <tbody>
              {order.cart.map((item, i) => (
                <tr key={i}>
                  <td>{item.name}</td>
                  <td>{item.quantity}</td>
                  <td>{item.unitPrice.toFixed(2)}</td>
                  <td>{item.totalPrice.toFixed(2)}</td>
                </tr>
              ))}
            </tbody>
          </table>

          <p>‡∏¢‡∏≠‡∏î‡∏Å‡πà‡∏≠‡∏ô VAT: {order.finalTotal.toFixed(2)} ‡∏ö‡∏≤‡∏ó</p>
          <p>VAT 7%: {order.vatAmount.toFixed(2)} ‡∏ö‡∏≤‡∏ó</p>
          <h3>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏™‡∏∏‡∏ó‡∏ò‡∏¥: {order.grandTotal.toFixed(2)} ‡∏ö‡∏≤‡∏ó</h3>
        </div>
      </div>

      {/* CSS */}
      <style jsx>{`
        .invoice-page {
          display: flex;
          width: 210mm;
          height: 297mm;
          margin: auto;
          font-family: 'TH Sarabun New', sans-serif;
        }
        .invoice-column {
          width: 50%;
          padding: 10mm;
          border-right: 2px dashed black;
          box-sizing: border-box;
        }
        .invoice-column:last-child {
          border-right: none;
        }
        table {
          width: 100%;
          border-collapse: collapse;
          margin-top: 10px;
        }
        th,
        td {
          border: 1px solid #000;
          padding: 4px;
          text-align: left;
        }
        /* ‚úÖ Print ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ invoice */
        @media print {
          body * {
            visibility: hidden;
          }
          #invoice,
          #invoice * {
            visibility: visible;
          }
          #invoice {
            position: absolute;
            left: 0;
            top: 0;
          }
          .no-print {
            display: none !important;
          }
        }
      `}</style>
    </div>
  );
}
