'use client';

import {
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  Typography,
  Button,
  Stack,
  Box,
  Card,
  TextField,
  Divider,
  FormControlLabel,
  RadioGroup,
  Radio,
  CardContent,
} from '@mui/material';
import React, { useState, useEffect } from 'react';
import { CartItem } from '../types/cart';

interface StampModalProps {
  open: boolean;
  onClose: () => void;
  onSelect: (item: CartItem) => void;
  productName: string;
  initialData?: Partial<CartItem>;
}

export default function StampModal({
  open,
  onClose,
  onSelect,
  productName,
  initialData,
}: StampModalProps) {
  const [type, setType] = useState<'normal' | 'inked'>('normal');
  const [shape, setShape] = useState<'circle' | 'square'>('circle');
  const [productNote, setProductNote] = useState('');
  const [size, setSize] = useState('');
  const [price, setPrice] = useState(0);
  const [quantity, setQuantity] = useState(1);
  const [total, setTotal] = useState(0);
  const [deposit, setDeposit] = useState(0);
  const [fullPayment, setFullPayment] = useState(false);

  const remaining = Math.max(total - deposit, 0);

  useEffect(() => {
    if (initialData) {
      setType(initialData.type || 'normal');
      setShape(initialData.shape || 'circle');
      setProductNote(initialData.productNote || '');
      setSize(initialData.size || '');
      setPrice(initialData.unitPrice || 0); // üëà ‡πÅ‡∏Å‡πâ‡∏à‡∏≤‡∏Å price ‚Üí unitPrice
      setQuantity(initialData.qty || 1); // üëà ‡πÅ‡∏Å‡πâ‡∏à‡∏≤‡∏Å quantity ‚Üí qty
      setTotal(initialData.totalPrice || 0); // üëà ‡πÅ‡∏Å‡πâ‡∏à‡∏≤‡∏Å total ‚Üí totalPrice
      setDeposit(initialData.deposit || 0);
      setFullPayment(initialData.fullPayment || false);
    }
  }, [initialData, open]);

  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
  useEffect(() => {
    setTotal(price * quantity);
  }, [price, quantity]);

  return (
    <Dialog open={open} onClose={onClose} fullWidth maxWidth="md">
      <DialogTitle sx={{ fontWeight: 700 }}>{productName}</DialogTitle>
      <DialogContent dividers>
        {/* ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ï‡∏£‡∏≤‡∏¢‡∏≤‡∏á */}
        <Typography variant="h6" fontWeight={700} gutterBottom>
          ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó :
        </Typography>
        <RadioGroup row value={type} onChange={e => setType(e.target.value as 'normal' | 'inked')}>
          <FormControlLabel value="normal" control={<Radio />} label="‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤" />
          <FormControlLabel value="inked" control={<Radio />} label="‡∏´‡∏°‡∏∂‡∏Å‡πÉ‡∏ô‡∏ï‡∏±‡∏ß" />
        </RadioGroup>

        <Divider sx={{ my: 2 }} />

        {/* ‡∏ä‡∏ô‡∏¥‡∏î */}
        <Typography variant="h6" fontWeight={700} gutterBottom>
          ‡∏ä‡∏ô‡∏¥‡∏î :
        </Typography>
        <RadioGroup
          row
          value={shape}
          onChange={e => setShape(e.target.value as 'circle' | 'square')}>
          <FormControlLabel value="circle" control={<Radio />} label="‡∏ß‡∏á‡∏Å‡∏•‡∏°" />
          <FormControlLabel value="square" control={<Radio />} label="‡∏™‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°" />
        </RadioGroup>

        <Divider sx={{ my: 2 }} />

        <Typography variant="h6" fontWeight={700} gutterBottom>
          ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ :
        </Typography>

        <TextField
          label="‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
          value={productNote}
          onChange={e => setProductNote(e.target.value)}
          fullWidth
          sx={{ mb: 2 }}
        />

        <Divider sx={{ my: 2 }} />

        {/* ‡∏Ç‡∏ô‡∏≤‡∏î, ‡∏£‡∏≤‡∏Ñ‡∏≤, ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô */}
        <Typography variant="h6" fontWeight={700} gutterBottom>
          ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° :
        </Typography>
        <Stack direction={{ xs: 'column', md: 'row' }} spacing={2} sx={{ mb: 2 }}>
          <TextField label="‡∏Ç‡∏ô‡∏≤‡∏î" value={size} onChange={e => setSize(e.target.value)} fullWidth />
          <TextField
            label="‡∏£‡∏≤‡∏Ñ‡∏≤"
            type="number"
            value={price}
            onChange={e => setPrice(Number(e.target.value) || 0)}
            fullWidth
          />
          <TextField
            label="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô"
            type="number"
            value={quantity}
            onChange={e => setQuantity(Number(e.target.value) || 0)}
            fullWidth
          />
        </Stack>

        <Divider sx={{ my: 2 }} />

        {/* ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô */}
        <Typography variant="h6" fontWeight={700} gutterBottom>
          ‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏Ñ‡∏≤ :
        </Typography>
        <RadioGroup
          row
          value={fullPayment ? 'full' : 'deposit'}
          onChange={e => setFullPayment(e.target.value === 'full')}
          sx={{ width: '100%' }}>
          <Stack
            direction={{ xs: 'column', md: 'row' }}
            spacing={3}
            alignItems="stretch"
            flexWrap="wrap"
            sx={{ width: '100%' }}>
            {/* ‡∏°‡∏±‡∏î‡∏à‡∏≥ */}
            <Card
              variant="outlined"
              sx={{
                flex: 1,
                minWidth: 280,
                borderColor: !fullPayment ? 'primary.main' : 'grey.300',
              }}>
              <CardContent>
                <FormControlLabel
                  value="deposit"
                  control={<Radio />}
                  label={
                    <Typography variant="subtitle1" fontWeight={600}>
                      ‡∏°‡∏±‡∏î‡∏à‡∏≥‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                    </Typography>
                  }
                />
                <Stack spacing={2} mt={2}>
                  <TextField
                    label="‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°"
                    value={total}
                    disabled
                    fullWidth
                    InputProps={{
                      endAdornment: <Typography sx={{ ml: 1 }}>‡∏ø</Typography>,
                    }}
                  />
                  <TextField
                    label="‡∏¢‡∏≠‡∏î‡∏°‡∏±‡∏î‡∏à‡∏≥"
                    type="number"
                    value={deposit}
                    onChange={e => setDeposit(Number(e.target.value) || 0)}
                    fullWidth
                    disabled={fullPayment}
                    InputProps={{
                      endAdornment: <Typography sx={{ ml: 1 }}>‡∏ø</Typography>,
                    }}
                  />
                  <TextField
                    label="‡∏Ñ‡∏á‡∏Ñ‡πâ‡∏≤‡∏á"
                    value={remaining}
                    fullWidth
                    disabled
                    InputProps={{
                      endAdornment: <Typography sx={{ ml: 1 }}>‡∏ø</Typography>,
                    }}
                  />
                </Stack>
              </CardContent>
            </Card>

            {/* ‡πÄ‡∏ï‡πá‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô */}
            <Card
              variant="outlined"
              sx={{
                flex: 1,
                minWidth: 280,
                borderColor: fullPayment ? 'primary.main' : 'grey.300',
              }}>
              <CardContent>
                <FormControlLabel
                  value="full"
                  control={<Radio />}
                  label={
                    <Typography variant="subtitle1" fontWeight={600}>
                      ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏ï‡πá‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô
                    </Typography>
                  }
                />
                <Stack spacing={2} mt={2}>
                  <TextField
                    label="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô"
                    value={total}
                    fullWidth
                    disabled
                    InputProps={{
                      endAdornment: <Typography sx={{ ml: 1 }}>‡∏ø</Typography>,
                    }}
                  />
                </Stack>
              </CardContent>
            </Card>
          </Stack>
        </RadioGroup>
      </DialogContent>

      <Box sx={{ mt: 2, textAlign: 'right' }}>
        <Typography variant="h6" sx={{ color: 'green', fontWeight: 700, px: 3 }}>
          {fullPayment
            ? `‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏ï‡πá‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${total.toLocaleString()} ‡∏ø`
            : `‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡∏°‡∏±‡∏î‡∏à‡∏≥: ${deposit.toLocaleString()} ‡∏ø`}
        </Typography>
      </Box>

      <DialogActions sx={{ px: 3, py: 2 }}>
        <Button onClick={onClose}>‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</Button>
        <Button
          variant="contained"
          size="large"
          onClick={() =>
            onSelect({
              key: '', // ‡∏à‡∏∞‡πÉ‡∏™‡πà‡∏ï‡∏≠‡∏ô add ‡πÄ‡∏Ç‡πâ‡∏≤ cart ‡πÉ‡∏ô SellPage
              name: productName,
              category: '‡∏ï‡∏£‡∏≤‡∏¢‡∏≤‡∏á',
              type,
              shape,
              size,
              productNote,
              qty: quantity,
              unitPrice: price,
              totalPrice: total,
              deposit: fullPayment ? total : deposit,
              remaining: fullPayment ? 0 : remaining,
              fullPayment,
            } as CartItem)
          }>
          ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
        </Button>
      </DialogActions>
    </Dialog>
  );
}
